
{
	"info": {
		"_postman_id": "8dcab107-223b-4089-91df-c0719f6d0c9b",
		"name": "API automation test cases ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Seller accept offer ",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");",
									"",
									"var Common200OkTests = () => {",
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than \"+ pm.environment.get(\"response_time\"), function () {",
									"  pm.response.to.have.responseTime.below(response_time);",
									"});",
									"",
									"//Check Status Code ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Check Status Message ",
									"pm.test(\"Status code name has string Ok\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common200OkTests\",Common200OkTests.toString());",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"",
									"var response = pm.response.json();",
									" //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - MakeOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"",
									"var Common201Tests = () => {",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"var response = pm.response.json();",
									"",
									"pm.test(\"verify that request status is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than\"+response_time , function()  {",
									"  pm.response.to.have.responseTime.below( response_time);",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common201Tests\",Common201Tests.toString());",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that the added car is a make offer car\", function () {",
									"    pm.expect(response.car.make_offer).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"make_offer_reserve_amount\":500,\n\"make_offer\":true,\n\"options\":{\"make_offer\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"//Check if the car appear in selling active tab ",
									"var CarsLength = response.cars.length;",
									"var Pages = response.total_pages;",
									"var flag = false;",
									"",
									"for(var j=0 ; j <= Pages; j++ ){",
									"",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"    ",
									"}",
									"}",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "363a5d07-55eb-40db-8892-ab4839664f22",
								"exec": [
									"var profile = () => {",
									"var host = pm.globals.get(\"host\"); ",
									"var AuthToken = pm.globals.get(\"AuthToken\"); ",
									"",
									"var options = {",
									"    method: 'GET',",
									"    url: `${host}/v4/owned_cars?q[status]=active&page=${pm.globals.get(\"variable_key\")}`",
									"  }",
									"  header: ",
									"   { ",
									"     Authorization: AuthToken     ",
									"     ",
									"   } };",
									"",
									"pm.sendRequest(options, function (err, response) {",
									"     const data = response.json();",
									"   ",
									"});",
									"    ",
									"}",
									"",
									"pm.environment.set(\"profile\",profile.toString());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables take delearship id ",
									"var response = pm.response.json();",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Proposal _ Make-Offer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0206d741-e90e-463f-89b1-d5c0dcce9013",
								"exec": [
									"pm.environment.set(\"OfferAmount\", \"6000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9495eb8c-77ba-4f54-b968-81638219cb67",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"// get the offer id ",
									"var response =  pm.response.json();",
									"pm.globals.set(\"OfferId\", response.proposal.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "current-dealership-id",
								"type": "text",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"proposal\": {\n\t\t\"type\": \"make_offer\",\n\t\t\"price\": {{OfferAmount}},\n\t\t\"validity_period\": \"24.0\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}/v4/cars/{{CarId}}/proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"cars",
								"{{CarId}}",
								"proposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"//Check if the car appear in buying active tab ",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables",
									"var response = pm.response.json();",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Accept Proposal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1304a93b-9197-449b-8832-272970ae52cd",
								"exec": [
									"eval(pm.environment.get(\"Common201Tests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars/{{CarId}}/proposals/{{OfferId}}/accept",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars",
								"{{CarId}}",
								"proposals",
								"{{OfferId}}",
								"accept"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-sold",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in selling sold tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the sold tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=sold",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Seller accept offer  Copy",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");",
									"",
									"var Common200OkTests = () => {",
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than \"+ pm.environment.get(\"response_time\"), function () {",
									"  pm.response.to.have.responseTime.below(response_time);",
									"});",
									"",
									"//Check Status Code ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Check Status Message ",
									"pm.test(\"Status code name has string Ok\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common200OkTests\",Common200OkTests.toString());",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"",
									"var response = pm.response.json();",
									" //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - MakeOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"",
									"var Common201Tests = () => {",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"var response = pm.response.json();",
									"",
									"pm.test(\"verify that request status is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than\"+response_time , function()  {",
									"  pm.response.to.have.responseTime.below( response_time);",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common201Tests\",Common201Tests.toString());",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that the added car is a make offer car\", function () {",
									"    pm.expect(response.car.make_offer).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"make_offer_reserve_amount\":500,\n\"make_offer\":true,\n\"options\":{\"make_offer\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"//Check if the car appear in selling active tab ",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables take delearship id ",
									"var response = pm.response.json();",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Proposal _ Make-Offer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0206d741-e90e-463f-89b1-d5c0dcce9013",
								"exec": [
									"pm.environment.set(\"OfferAmount\", \"6000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9495eb8c-77ba-4f54-b968-81638219cb67",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"// get the offer id ",
									"var response =  pm.response.json();",
									"pm.globals.set(\"OfferId\", response.proposal.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "current-dealership-id",
								"type": "text",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"proposal\": {\n\t\t\"type\": \"make_offer\",\n\t\t\"price\": {{OfferAmount}},\n\t\t\"validity_period\": \"24.0\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}/v4/cars/{{CarId}}/proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"cars",
								"{{CarId}}",
								"proposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"//Check if the car appear in buying active tab ",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables",
									"var response = pm.response.json();",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Accept Proposal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1304a93b-9197-449b-8832-272970ae52cd",
								"exec": [
									"eval(pm.environment.get(\"Common201Tests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars/{{CarId}}/proposals/{{OfferId}}/accept",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars",
								"{{CarId}}",
								"proposals",
								"{{OfferId}}",
								"accept"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-sold",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in selling sold tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the sold tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=sold",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Seller reject offer",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");",
									"",
									"var Common200OkTests = () => {",
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than \"+ pm.environment.get(\"response_time\"), function () {",
									"  pm.response.to.have.responseTime.below(response_time);",
									"});",
									"",
									"//Check Status Code ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Check Status Message ",
									"pm.test(\"Status code name has string Ok\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common200OkTests\",Common200OkTests.toString());",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"",
									"var response = pm.response.json();",
									" //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - MakeOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"",
									"var Common201Tests = () => {",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"var response = pm.response.json();",
									"",
									"pm.test(\"verify that request status is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than\"+response_time , function()  {",
									"  pm.response.to.have.responseTime.below( response_time);",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common201Tests\",Common201Tests.toString());",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that the added car is a make offer car\", function () {",
									"    pm.expect(response.car.make_offer).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"make_offer_reserve_amount\":500,\n\"make_offer\":true,\n\"options\":{\"make_offer\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"//Check if the car appear in selling active tab ",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables take delearship id ",
									"var response = pm.response.json();",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Proposal _ Make-Offer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0206d741-e90e-463f-89b1-d5c0dcce9013",
								"exec": [
									"pm.environment.set(\"OfferAmount\", \"6000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9495eb8c-77ba-4f54-b968-81638219cb67",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"// get the offer id ",
									"var response =  pm.response.json();",
									"pm.globals.set(\"OfferId\", response.proposal.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "current-dealership-id",
								"type": "text",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"proposal\": {\n\t\t\"type\": \"make_offer\",\n\t\t\"price\": {{OfferAmount}},\n\t\t\"validity_period\": \"24.0\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}/v4/cars/{{CarId}}/proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"cars",
								"{{CarId}}",
								"proposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"//Check if the car appear in buying active tab ",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables",
									"var response = pm.response.json();",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "reject Proposal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1304a93b-9197-449b-8832-272970ae52cd",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars/{{CarId}}/proposals/{{OfferId}}/reject",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars",
								"{{CarId}}",
								"proposals",
								"{{OfferId}}",
								"reject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in selling sold tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the sold tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Seller counter offer",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"//Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - MakeOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that car is a make offer car\", function () {",
									"    pm.expect(response.car.make_offer).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"make_offer_reserve_amount\":500,\n\"make_offer\":true,\n\"options\":{\"make_offer\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in selling active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"//Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Proposal _ Make-Offer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0206d741-e90e-463f-89b1-d5c0dcce9013",
								"exec": [
									"pm.environment.set(\"OfferAmount\", \"6000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9495eb8c-77ba-4f54-b968-81638219cb67",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"// Set Testing",
									"var response =  pm.response.json();",
									"pm.globals.set(\"OfferId\", response.proposal.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "current-dealership-id",
								"type": "text",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"proposal\": {\n\t\t\"type\": \"make_offer\",\n\t\t\"price\": {{OfferAmount}},\n\t\t\"validity_period\": \"24.0\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}/v4/cars/{{CarId}}/proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"cars",
								"{{CarId}}",
								"proposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"",
									"var response = pm.response.json();",
									"//Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than \"+ response_time, function () {",
									"  pm.response.to.have.responseTime.below(response_time);",
									"});",
									"",
									"//Check Status Code ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Check Status Message ",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Counter Proposals Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c03bbdde-b368-49bf-a4b3-e4130c991c21",
								"exec": [
									"pm.environment.set(\"CounterOfferValue\", \"9000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5a063403-4eab-4b8c-a881-0c651a97ea01",
								"exec": [
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"// Set Testing",
									"var response =  pm.response.json();",
									"var CarId = pm.globals.get(\"CarId\");",
									"",
									"pm.test(\"Verify that the offer is countered \", function () {",
									"    pm.expect(response.counter_proposal.car_id).to.eql(CarId);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": {{CounterOfferValue}}\n}"
						},
						"url": {
							"raw": "{{host}}/v1/proposals/{{OfferId}}/counter_proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"proposals",
								"{{OfferId}}",
								"counter_proposals"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Buyer autobid ",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - bid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"// Set Variables",
									"// Payload Variables",
									"// Values ( 1 - 71 ) -- Note: this related to VIN you provided",
									"pm.environment.set('make_id', 37);",
									"",
									"// Values ( 684 - 731 ) -- Note: this related to VIN you provided",
									"pm.environment.set('model_id', 700);",
									"",
									"// Values ( <= 1950 ) -- Note: this related to VIN you provided",
									"pm.environment.set('year', 2010);",
									"",
									"// Values ( userd | new )",
									"pm.environment.set('condition', 'new');",
									"",
									"pm.environment.set('odometer', 34);",
									"",
									"// Values ( 1 = Manual | 2 = Automatic | 3 = Semi-automatic and dual-clutch )",
									"pm.environment.set('transmission_id', 2);",
									"",
									"// Values ( 1 = 4X4 | 2 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('body_type_id', 1);",
									"",
									"// Values ( 6 = 1200 | 7 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('engine_size_id', 6);",
									"",
									"pm.environment.set('create_car_title', 'This is testing create car from Postman runner');",
									"",
									"pm.environment.set('create_car_description', 'This is testing create car description');",
									"",
									"// Values ( 1 - 12 )",
									"pm.environment.set('number_of_cylinders', 2);",
									"",
									"pm.environment.set('number_of_passengers', 5);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('interior_color_id', 25);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('exterior_color_id', 25);",
									"",
									"// Values ( 28 = FWD | 29 = RWD | 30 = 4WD | 31 = AWD )",
									"pm.environment.set('drive_type_id', 29);",
									"",
									"// Values ( 10 = Interior type 1 | 11 = Interior type 2 )",
									"pm.environment.set('interior_type_id', 11);",
									"",
									"// Values ( 8 = 92 | 9 = 80 )",
									"pm.environment.set('fuel_type_id', 8);",
									"",
									"pm.environment.set('odour', 'Testing Odour here create car');",
									"",
									"pm.environment.set('number_of_keys', 3);",
									"",
									"// Values ( 12 - 20 & 32 ) -- Note: define as json array like: [{ \"number\": 12 }, { \"number\": 14 }]",
									"pm.environment.set('accessory_ids', [{",
									"    \"number\": 12",
									"}, {",
									"    \"number\": 14",
									"}]);",
									"",
									"pm.environment.set('accident_history', 'Testing Accident history for create car');",
									"",
									"// Values ( 21 - 24 ) -- Note: define as json array like: [{ \"number\": 21 }, { \"number\": 24 }]",
									"pm.environment.set('damage_ids', [{",
									"    \"number\": 21",
									"}, {",
									"    \"number\": 24",
									"}]);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('exterior_condition_points', 3);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('interior_condition_points', 4);",
									"",
									"pm.environment.set('exterior_condition_comments', 'This is testing create car exterior condition comments');",
									"",
									"pm.environment.set('interior_condition_comments', 'This is testing create car interior condition comments');",
									"",
									"// Values json objects -- Note: define as json object like below:",
									"// {",
									"//     \"1\": {",
									"//           \"id\": \"\",",
									"//           \"index\": \"\",",
									"//           \"_destroy\": \"\",",
									"//           \"title\": \"\",",
									"//           \"description\": \"\",",
									"//           \"x_coordinate\": \"\",",
									"//           \"y_coordinate\": \"\"",
									"//         }",
									"// }",
									"pm.environment.set('damage_points_attributes', {",
									"    \"1\": {",
									"        \"id\": \"1\",",
									"        \"index\": \"1\",",
									"        \"_destroy\": \"Door Destroy\",",
									"        \"title\": \"Door Destroy\",",
									"        \"description\": \"Destroy in front left door\",",
									"        \"x_coordinate\": \"1497524316448\",",
									"        \"y_coordinate\": \"1497524316448\"",
									"    },",
									"    \"2\": {",
									"        \"id\": \"2\",",
									"        \"index\": \"2\",",
									"        \"_destroy\": \"Glass Destroy\",",
									"        \"title\": \"Glass Destroy\",",
									"        \"description\": \"Destroy in Front Glass\",",
									"        \"x_coordinate\": \"1497524513853\",",
									"        \"y_coordinate\": \"1497524513853\"",
									"    }",
									"});",
									"",
									"// Values ( 24, 48, 72, 200, 0.1, 0.3 )",
									"pm.environment.set('sale_period', '24');",
									"",
									"",
									"// options has some roles",
									"// You can't send Make offer with Bid for car creation, So if you select Make offer then Bid will disabled",
									"// Values as json obeject as below:",
									"// {",
									"//     \"buy_now\": {",
									"//         \"price\": 120",
									"//     },",
									"//     \"make_offer\": {",
									"//         \"reserve_amount\": 120",
									"//     }",
									"// }",
									"pm.environment.set('options', {",
									"    \"buy_now\": {",
									"          \"price\": 120",
									"        },",
									"        \"bid\": {",
									"          \"start_amount\": 1,",
									"          \"reserve_amount\": 2",
									"        }",
									"});",
									"",
									"",
									"",
									"// Values: ( save | save_and_activate | save_as_draft )",
									"pm.environment.set('save_commit', 'save_and_activate');",
									"",
									"pm.environment.set('postal_code', 'K1A 0B1');",
									"",
									"// Values ( FWD | RWD | 4WD | AWD )",
									"pm.environment.set('drive_type', '4WD');",
									"",
									"",
									"// Test Variables",
									"pm.environment.set('response_time', 5000);",
									"",
									"pm.environment.set('response_time_msg', \"Response Time is less than\" + pm.environment.get('response_time') + \"seconds\");",
									"",
									"pm.environment.set('status_code', 201);",
									"",
									"pm.environment.set(\"status_code_msg\", \"Response Status Code \" + pm.environment.get(\"status_code\"));",
									"",
									"pm.environment.set(\"schema_response_msg\", \"Server Returns Reposne Body\");",
									"",
									"pm.environment.set(\"schema_msg\", \"Reposne Body schema is correct\");",
									"",
									"pm.environment.set(\"schema_form\", {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"/properties/checked\",",
									"      \"type\": \"boolean\",",
									"      \"title\": \"The Checked Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": false,",
									"      \"examples\": [",
									"        false",
									"      ]",
									"    },",
									"    \"dimensions\": {",
									"      \"$id\": \"/properties/dimensions\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"/properties/dimensions/properties/width\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Width Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            5",
									"          ]",
									"        },",
									"        \"height\": {",
									"          \"$id\": \"/properties/dimensions/properties/height\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Height Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            10",
									"          ]",
									"        }",
									"      }",
									"    },",
									"    \"id\": {",
									"      \"$id\": \"/properties/id\",",
									"      \"type\": \"integer\",",
									"      \"title\": \"The Id Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        1",
									"      ]",
									"    },",
									"    \"name\": {",
									"      \"$id\": \"/properties/name\",",
									"      \"type\": \"string\",",
									"      \"title\": \"The Name Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": \"\",",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ]",
									"    },",
									"    \"price\": {",
									"      \"$id\": \"/properties/price\",",
									"      \"type\": \"number\",",
									"      \"title\": \"The Price Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        12.5",
									"      ]",
									"    },",
									"    \"tags\": {",
									"      \"$id\": \"/properties/tags\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"/properties/tags/items\",",
									"        \"type\": \"string\",",
									"        \"title\": \"The 0 Schema\",",
									"        \"description\": \"An explanation about the purpose of this instance.\",",
									"        \"default\": \"\",",
									"        \"examples\": [",
									"          \"home\"",
									"        ]",
									"      }",
									"    }",
									"  }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"",
									"pm.test(\"Verify that car is a bidding car\", function () {",
									"    pm.expect(response.car.bid).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"options\":{\"bid\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"//Check if the car appear in selling active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"    pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "auto bid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fc141910-8072-4240-b6f4-4b142e7814b3",
								"exec": [
									"pm.environment.set(\"AutoBidValue\", \"15000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "57a23af7-2e7d-4b60-94ca-57b024e424c2",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auto_bid[value]",
									"value": "{{AutoBidValue}}",
									"type": "text"
								},
								{
									"key": "auto_bid[car_id]",
									"value": "{{CarId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v4/auto_bids",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"auto_bids"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Buyer make offer ",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");",
									"",
									"var Common200OkTests = () => {",
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than \"+ pm.environment.get(\"response_time\"), function () {",
									"  pm.response.to.have.responseTime.below(response_time);",
									"});",
									"",
									"//Check Status Code ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Check Status Message ",
									"pm.test(\"Status code name has string Ok\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common200OkTests\",Common200OkTests.toString());",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"",
									"var response = pm.response.json();",
									" //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - MakeOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"",
									"var Common201Tests = () => {",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"var response = pm.response.json();",
									"",
									"pm.test(\"verify that request status is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than\"+response_time , function()  {",
									"  pm.response.to.have.responseTime.below( response_time);",
									"});",
									"",
									"//Check if returned response is not null",
									"pm.test(\"Verify that response is not null\", function () {",
									"    pm.expect(response).to.not.eql(null);",
									"});",
									"}",
									"",
									"pm.environment.set(\"Common201Tests\",Common201Tests.toString());",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that the added car is a make offer car\", function () {",
									"    pm.expect(response.car.make_offer).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"make_offer_reserve_amount\":500,\n\"make_offer\":true,\n\"options\":{\"make_offer\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"//Check if the car appear in selling active tab ",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"//Set variables take delearship id ",
									"var response = pm.response.json();",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Proposal _ Make-Offer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0206d741-e90e-463f-89b1-d5c0dcce9013",
								"exec": [
									"pm.environment.set(\"OfferAmount\", \"6000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9495eb8c-77ba-4f54-b968-81638219cb67",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"// get the offer id ",
									"var response =  pm.response.json();",
									"pm.globals.set(\"OfferId\", response.proposal.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "current-dealership-id",
								"type": "text",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"proposal\": {\n\t\t\"type\": \"make_offer\",\n\t\t\"price\": {{OfferAmount}},\n\t\t\"validity_period\": \"24.0\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}/v4/cars/{{CarId}}/proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"cars",
								"{{CarId}}",
								"proposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"//Check if the car appear in buying active tab ",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Buyer make a bid ",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - bid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"// Set Variables",
									"// Payload Variables",
									"// Values ( 1 - 71 ) -- Note: this related to VIN you provided",
									"pm.environment.set('make_id', 37);",
									"",
									"// Values ( 684 - 731 ) -- Note: this related to VIN you provided",
									"pm.environment.set('model_id', 700);",
									"",
									"// Values ( <= 1950 ) -- Note: this related to VIN you provided",
									"pm.environment.set('year', 2010);",
									"",
									"// Values ( userd | new )",
									"pm.environment.set('condition', 'new');",
									"",
									"pm.environment.set('odometer', 34);",
									"",
									"// Values ( 1 = Manual | 2 = Automatic | 3 = Semi-automatic and dual-clutch )",
									"pm.environment.set('transmission_id', 2);",
									"",
									"// Values ( 1 = 4X4 | 2 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('body_type_id', 1);",
									"",
									"// Values ( 6 = 1200 | 7 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('engine_size_id', 6);",
									"",
									"pm.environment.set('create_car_title', 'This is testing create car from Postman runner');",
									"",
									"pm.environment.set('create_car_description', 'This is testing create car description');",
									"",
									"// Values ( 1 - 12 )",
									"pm.environment.set('number_of_cylinders', 2);",
									"",
									"pm.environment.set('number_of_passengers', 5);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('interior_color_id', 25);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('exterior_color_id', 25);",
									"",
									"// Values ( 28 = FWD | 29 = RWD | 30 = 4WD | 31 = AWD )",
									"pm.environment.set('drive_type_id', 29);",
									"",
									"// Values ( 10 = Interior type 1 | 11 = Interior type 2 )",
									"pm.environment.set('interior_type_id', 11);",
									"",
									"// Values ( 8 = 92 | 9 = 80 )",
									"pm.environment.set('fuel_type_id', 8);",
									"",
									"pm.environment.set('odour', 'Testing Odour here create car');",
									"",
									"pm.environment.set('number_of_keys', 3);",
									"",
									"// Values ( 12 - 20 & 32 ) -- Note: define as json array like: [{ \"number\": 12 }, { \"number\": 14 }]",
									"pm.environment.set('accessory_ids', [{",
									"    \"number\": 12",
									"}, {",
									"    \"number\": 14",
									"}]);",
									"",
									"pm.environment.set('accident_history', 'Testing Accident history for create car');",
									"",
									"// Values ( 21 - 24 ) -- Note: define as json array like: [{ \"number\": 21 }, { \"number\": 24 }]",
									"pm.environment.set('damage_ids', [{",
									"    \"number\": 21",
									"}, {",
									"    \"number\": 24",
									"}]);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('exterior_condition_points', 3);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('interior_condition_points', 4);",
									"",
									"pm.environment.set('exterior_condition_comments', 'This is testing create car exterior condition comments');",
									"",
									"pm.environment.set('interior_condition_comments', 'This is testing create car interior condition comments');",
									"",
									"// Values json objects -- Note: define as json object like below:",
									"// {",
									"//     \"1\": {",
									"//           \"id\": \"\",",
									"//           \"index\": \"\",",
									"//           \"_destroy\": \"\",",
									"//           \"title\": \"\",",
									"//           \"description\": \"\",",
									"//           \"x_coordinate\": \"\",",
									"//           \"y_coordinate\": \"\"",
									"//         }",
									"// }",
									"pm.environment.set('damage_points_attributes', {",
									"    \"1\": {",
									"        \"id\": \"1\",",
									"        \"index\": \"1\",",
									"        \"_destroy\": \"Door Destroy\",",
									"        \"title\": \"Door Destroy\",",
									"        \"description\": \"Destroy in front left door\",",
									"        \"x_coordinate\": \"1497524316448\",",
									"        \"y_coordinate\": \"1497524316448\"",
									"    },",
									"    \"2\": {",
									"        \"id\": \"2\",",
									"        \"index\": \"2\",",
									"        \"_destroy\": \"Glass Destroy\",",
									"        \"title\": \"Glass Destroy\",",
									"        \"description\": \"Destroy in Front Glass\",",
									"        \"x_coordinate\": \"1497524513853\",",
									"        \"y_coordinate\": \"1497524513853\"",
									"    }",
									"});",
									"",
									"// Values ( 24, 48, 72, 200, 0.1, 0.3 )",
									"pm.environment.set('sale_period', '24');",
									"",
									"",
									"// options has some roles",
									"// You can't send Make offer with Bid for car creation, So if you select Make offer then Bid will disabled",
									"// Values as json obeject as below:",
									"// {",
									"//     \"buy_now\": {",
									"//         \"price\": 120",
									"//     },",
									"//     \"make_offer\": {",
									"//         \"reserve_amount\": 120",
									"//     }",
									"// }",
									"pm.environment.set('options', {",
									"    \"buy_now\": {",
									"          \"price\": 120",
									"        },",
									"        \"bid\": {",
									"          \"start_amount\": 1,",
									"          \"reserve_amount\": 2",
									"        }",
									"});",
									"",
									"",
									"",
									"// Values: ( save | save_and_activate | save_as_draft )",
									"pm.environment.set('save_commit', 'save_and_activate');",
									"",
									"pm.environment.set('postal_code', 'K1A 0B1');",
									"",
									"// Values ( FWD | RWD | 4WD | AWD )",
									"pm.environment.set('drive_type', '4WD');",
									"",
									"",
									"// Test Variables",
									"pm.environment.set('response_time', 5000);",
									"",
									"pm.environment.set('response_time_msg', \"Response Time is less than\" + pm.environment.get('response_time') + \"seconds\");",
									"",
									"pm.environment.set('status_code', 201);",
									"",
									"pm.environment.set(\"status_code_msg\", \"Response Status Code \" + pm.environment.get(\"status_code\"));",
									"",
									"pm.environment.set(\"schema_response_msg\", \"Server Returns Reposne Body\");",
									"",
									"pm.environment.set(\"schema_msg\", \"Reposne Body schema is correct\");",
									"",
									"pm.environment.set(\"schema_form\", {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"/properties/checked\",",
									"      \"type\": \"boolean\",",
									"      \"title\": \"The Checked Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": false,",
									"      \"examples\": [",
									"        false",
									"      ]",
									"    },",
									"    \"dimensions\": {",
									"      \"$id\": \"/properties/dimensions\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"/properties/dimensions/properties/width\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Width Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            5",
									"          ]",
									"        },",
									"        \"height\": {",
									"          \"$id\": \"/properties/dimensions/properties/height\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Height Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            10",
									"          ]",
									"        }",
									"      }",
									"    },",
									"    \"id\": {",
									"      \"$id\": \"/properties/id\",",
									"      \"type\": \"integer\",",
									"      \"title\": \"The Id Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        1",
									"      ]",
									"    },",
									"    \"name\": {",
									"      \"$id\": \"/properties/name\",",
									"      \"type\": \"string\",",
									"      \"title\": \"The Name Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": \"\",",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ]",
									"    },",
									"    \"price\": {",
									"      \"$id\": \"/properties/price\",",
									"      \"type\": \"number\",",
									"      \"title\": \"The Price Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        12.5",
									"      ]",
									"    },",
									"    \"tags\": {",
									"      \"$id\": \"/properties/tags\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"/properties/tags/items\",",
									"        \"type\": \"string\",",
									"        \"title\": \"The 0 Schema\",",
									"        \"description\": \"An explanation about the purpose of this instance.\",",
									"        \"default\": \"\",",
									"        \"examples\": [",
									"          \"home\"",
									"        ]",
									"      }",
									"    }",
									"  }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"",
									"pm.test(\"Verify that car is a bidding car\", function () {",
									"    pm.expect(response.car.bid).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"options\":{\"bid\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"//Check if the car appear in selling active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"var response = pm.response.json();",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than \" + response_time, function () {",
									"  pm.response.to.have.responseTime.below(response_time);",
									"});",
									"",
									"//Check Status Code ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Check Status Message ",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"//Check if returned id not null",
									"pm.test(\"Returned id not null\", function () {",
									"    pm.expect(response.id).to.not.eql(null);",
									"});",
									"",
									"  //Set variables",
									"    pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Proposal_ Bid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a3c80a35-ad8d-4792-ad62-676d3cea4578",
								"exec": [
									"pm.environment.set(\"BidAmount\", \"6000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5a499e38-8ce1-44a8-ad3f-44a7fec84295",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"// Set Testing",
									"var response =  pm.response.json();",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"proposal\": {\n\t\t\"type\": \"bid\",\n\t\t\"price\": {{BidAmount}}\n\t\t//\"validity_period\": \"24.0\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}/v4/cars/{{CarId}}/proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"cars",
								"{{CarId}}",
								"proposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deactivate autobid",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - bid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"// Set Variables",
									"// Payload Variables",
									"// Values ( 1 - 71 ) -- Note: this related to VIN you provided",
									"pm.environment.set('make_id', 37);",
									"",
									"// Values ( 684 - 731 ) -- Note: this related to VIN you provided",
									"pm.environment.set('model_id', 700);",
									"",
									"// Values ( <= 1950 ) -- Note: this related to VIN you provided",
									"pm.environment.set('year', 2010);",
									"",
									"// Values ( userd | new )",
									"pm.environment.set('condition', 'new');",
									"",
									"pm.environment.set('odometer', 34);",
									"",
									"// Values ( 1 = Manual | 2 = Automatic | 3 = Semi-automatic and dual-clutch )",
									"pm.environment.set('transmission_id', 2);",
									"",
									"// Values ( 1 = 4X4 | 2 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('body_type_id', 1);",
									"",
									"// Values ( 6 = 1200 | 7 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('engine_size_id', 6);",
									"",
									"pm.environment.set('create_car_title', 'This is testing create car from Postman runner');",
									"",
									"pm.environment.set('create_car_description', 'This is testing create car description');",
									"",
									"// Values ( 1 - 12 )",
									"pm.environment.set('number_of_cylinders', 2);",
									"",
									"pm.environment.set('number_of_passengers', 5);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('interior_color_id', 25);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('exterior_color_id', 25);",
									"",
									"// Values ( 28 = FWD | 29 = RWD | 30 = 4WD | 31 = AWD )",
									"pm.environment.set('drive_type_id', 29);",
									"",
									"// Values ( 10 = Interior type 1 | 11 = Interior type 2 )",
									"pm.environment.set('interior_type_id', 11);",
									"",
									"// Values ( 8 = 92 | 9 = 80 )",
									"pm.environment.set('fuel_type_id', 8);",
									"",
									"pm.environment.set('odour', 'Testing Odour here create car');",
									"",
									"pm.environment.set('number_of_keys', 3);",
									"",
									"// Values ( 12 - 20 & 32 ) -- Note: define as json array like: [{ \"number\": 12 }, { \"number\": 14 }]",
									"pm.environment.set('accessory_ids', [{",
									"    \"number\": 12",
									"}, {",
									"    \"number\": 14",
									"}]);",
									"",
									"pm.environment.set('accident_history', 'Testing Accident history for create car');",
									"",
									"// Values ( 21 - 24 ) -- Note: define as json array like: [{ \"number\": 21 }, { \"number\": 24 }]",
									"pm.environment.set('damage_ids', [{",
									"    \"number\": 21",
									"}, {",
									"    \"number\": 24",
									"}]);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('exterior_condition_points', 3);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('interior_condition_points', 4);",
									"",
									"pm.environment.set('exterior_condition_comments', 'This is testing create car exterior condition comments');",
									"",
									"pm.environment.set('interior_condition_comments', 'This is testing create car interior condition comments');",
									"",
									"// Values json objects -- Note: define as json object like below:",
									"// {",
									"//     \"1\": {",
									"//           \"id\": \"\",",
									"//           \"index\": \"\",",
									"//           \"_destroy\": \"\",",
									"//           \"title\": \"\",",
									"//           \"description\": \"\",",
									"//           \"x_coordinate\": \"\",",
									"//           \"y_coordinate\": \"\"",
									"//         }",
									"// }",
									"pm.environment.set('damage_points_attributes', {",
									"    \"1\": {",
									"        \"id\": \"1\",",
									"        \"index\": \"1\",",
									"        \"_destroy\": \"Door Destroy\",",
									"        \"title\": \"Door Destroy\",",
									"        \"description\": \"Destroy in front left door\",",
									"        \"x_coordinate\": \"1497524316448\",",
									"        \"y_coordinate\": \"1497524316448\"",
									"    },",
									"    \"2\": {",
									"        \"id\": \"2\",",
									"        \"index\": \"2\",",
									"        \"_destroy\": \"Glass Destroy\",",
									"        \"title\": \"Glass Destroy\",",
									"        \"description\": \"Destroy in Front Glass\",",
									"        \"x_coordinate\": \"1497524513853\",",
									"        \"y_coordinate\": \"1497524513853\"",
									"    }",
									"});",
									"",
									"// Values ( 24, 48, 72, 200, 0.1, 0.3 )",
									"pm.environment.set('sale_period', '24');",
									"",
									"",
									"// options has some roles",
									"// You can't send Make offer with Bid for car creation, So if you select Make offer then Bid will disabled",
									"// Values as json obeject as below:",
									"// {",
									"//     \"buy_now\": {",
									"//         \"price\": 120",
									"//     },",
									"//     \"make_offer\": {",
									"//         \"reserve_amount\": 120",
									"//     }",
									"// }",
									"pm.environment.set('options', {",
									"    \"buy_now\": {",
									"          \"price\": 120",
									"        },",
									"        \"bid\": {",
									"          \"start_amount\": 1,",
									"          \"reserve_amount\": 2",
									"        }",
									"});",
									"",
									"",
									"",
									"// Values: ( save | save_and_activate | save_as_draft )",
									"pm.environment.set('save_commit', 'save_and_activate');",
									"",
									"pm.environment.set('postal_code', 'K1A 0B1');",
									"",
									"// Values ( FWD | RWD | 4WD | AWD )",
									"pm.environment.set('drive_type', '4WD');",
									"",
									"",
									"// Test Variables",
									"pm.environment.set('response_time', 5000);",
									"",
									"pm.environment.set('response_time_msg', \"Response Time is less than\" + pm.environment.get('response_time') + \"seconds\");",
									"",
									"pm.environment.set('status_code', 201);",
									"",
									"pm.environment.set(\"status_code_msg\", \"Response Status Code \" + pm.environment.get(\"status_code\"));",
									"",
									"pm.environment.set(\"schema_response_msg\", \"Server Returns Reposne Body\");",
									"",
									"pm.environment.set(\"schema_msg\", \"Reposne Body schema is correct\");",
									"",
									"pm.environment.set(\"schema_form\", {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"/properties/checked\",",
									"      \"type\": \"boolean\",",
									"      \"title\": \"The Checked Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": false,",
									"      \"examples\": [",
									"        false",
									"      ]",
									"    },",
									"    \"dimensions\": {",
									"      \"$id\": \"/properties/dimensions\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"/properties/dimensions/properties/width\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Width Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            5",
									"          ]",
									"        },",
									"        \"height\": {",
									"          \"$id\": \"/properties/dimensions/properties/height\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Height Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            10",
									"          ]",
									"        }",
									"      }",
									"    },",
									"    \"id\": {",
									"      \"$id\": \"/properties/id\",",
									"      \"type\": \"integer\",",
									"      \"title\": \"The Id Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        1",
									"      ]",
									"    },",
									"    \"name\": {",
									"      \"$id\": \"/properties/name\",",
									"      \"type\": \"string\",",
									"      \"title\": \"The Name Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": \"\",",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ]",
									"    },",
									"    \"price\": {",
									"      \"$id\": \"/properties/price\",",
									"      \"type\": \"number\",",
									"      \"title\": \"The Price Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        12.5",
									"      ]",
									"    },",
									"    \"tags\": {",
									"      \"$id\": \"/properties/tags\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"/properties/tags/items\",",
									"        \"type\": \"string\",",
									"        \"title\": \"The 0 Schema\",",
									"        \"description\": \"An explanation about the purpose of this instance.\",",
									"        \"default\": \"\",",
									"        \"examples\": [",
									"          \"home\"",
									"        ]",
									"      }",
									"    }",
									"  }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"",
									"pm.test(\"Verify that car is a bidding car\", function () {",
									"    pm.expect(response.car.bid).to.eql(true);",
									"});",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"options\":{\"bid\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"//Check if the car appear in selling active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"    pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "auto bid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fc141910-8072-4240-b6f4-4b142e7814b3",
								"exec": [
									"pm.environment.set(\"AutoBidValue\", \"15000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "57a23af7-2e7d-4b60-94ca-57b024e424c2",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"//pm.globals.set(\"AutobidId\", response.auto_bid.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auto_bid[value]",
									"value": "{{AutoBidValue}}",
									"type": "text"
								},
								{
									"key": "auto_bid[car_id]",
									"value": "{{CarId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/auto_bids",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"auto_bids"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad954ee0-e3de-4a43-8ae4-e571a4080599",
								"exec": [
									"var response = pm.response.json();",
									"//Check if the car appear in buying active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the buying active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate Auto Bid Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "071904e8-7a3c-4b8f-9fc5-fe846e5cf592",
								"exec": [
									"",
									"",
									"",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"pm.test(\"verify that request status is 204\", function () {  pm.response.to.have.status(204);});",
									"// Check Response Time is less than ",
									"pm.test(\"Verify that response time is less than\"+response_time , function()  {  pm.response.to.have.responseTime.below( response_time);});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/auto_bids/{{AutobidId}}/deactivate?Authorization={{AuthToken}}&current-dealership-id={{DealershipId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"auto_bids",
								"{{AutobidId}}",
								"deactivate"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "{{AuthToken}}"
								},
								{
									"key": "current-dealership-id",
									"value": "{{DealershipId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Buyer is able to buy a buy now  car ",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car - Buy Now",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"// Save Car ID ",
									"var response = pm.response.json();",
									"",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that car is a buy now car\", function () {",
									"    pm.expect(response.car.buy_now).to.eql(true);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"condition\":\"new\",\n\"save_commit\":\"save_and_activate\",\n\"sale_period\": \"30\",\n\"vin\":\"YV1TS90D3Y1113682\",\n\"odometer\":1400,\n\"odometer_reading_unit_id\":188,\n\"number_of_keys_id\":171,\n\"odour_id\":173,\n\"make_id\":11,\n\"model_id\":260,\n\"year\":2017,\n\"trim_id\": 153,\n\"fuel_type_id\": 195,\n\"body_type_id\": 166,\n\"transmission_id\":176,\n\"engine_size_id\":64,\n\"drive_type_id\": 184,\n\"interior_color_id\":1,\n\"exterior_color_id\":4,\n\"number_of_cylinders\":6,\n\"number_of_passengers_id\":148,\n\"make_offer_reserve_amount\":500,\n\"make_offer\":true,\n\"options\":{\"buy_now\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Selling Cars-active",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "286406b3-ed68-47f8-90ff-a82dfe3fdc57",
								"exec": [
									"var response = pm.response.json();",
									"//Check if the car appear in selling active tab ",
									"",
									"var CarsLength = response.cars.length;",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the selling active tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/owned_cars?q[status]=active",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"owned_cars"
							],
							"query": [
								{
									"key": "q[status]",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO login grant-type password - buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"    pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{BuyerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Proposal_ Buy Now",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a3c80a35-ad8d-4792-ad62-676d3cea4578",
								"exec": [
									"pm.environment.set(\"BidAmount\", \"6000\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5a499e38-8ce1-44a8-ad3f-44a7fec84295",
								"exec": [
									"eval(pm.environment.get(\"Common201Tests\"))();",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "current-dealership-id",
								"type": "text",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{AuthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"proposal\": {\n\t\t\"type\": \"buy_now\"}\n}"
						},
						"url": {
							"raw": "{{host}}/v4/cars/{{CarId}}/proposals",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"cars",
								"{{CarId}}",
								"proposals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buying Cars-purchased",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1267ffc2-2221-489e-88f5-15874a5fcf9d",
								"exec": [
									"var response = pm.response.json();",
									"",
									"//Check if the car appears in buying purchased tab ",
									"",
									"var CarsLength = response.cars.length;",
									"",
									"var flag = false;",
									"for(var i = 0; i < CarsLength; i++) {",
									"  if(response.cars[i].id == pm.globals.get(\"CarId\")) {",
									"    flag = true;",
									"    console.log(flag)",
									"  }",
									"}",
									"",
									"pm.test(\"Verify that the car exists in the purchased  tab \", function () {",
									"    pm.expect(flag).to.eql(true);",
									"});",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"type": "text",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v4/buying_cars/purchased",
							"host": [
								"{{host}}"
							],
							"path": [
								"v4",
								"buying_cars",
								"purchased"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Registration - Dealer",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "888d7363-95f1-4855-93d4-e57433aa7c7f",
								"exec": [
									"var sso_username = \"sso-user\" +  Math.floor(Math.random() * 9999999);\r",
									"\r",
									"pm.environment.set(\"sso_reg_confirmedPassword\", \"12345678aA\");\r",
									"pm.environment.set(\"reg_email\",sso_username +\"@mailinator.com\");\r",
									"pm.environment.set(\"sso_firstName\", sso_username);\r",
									"pm.environment.set(\"sso_lastName\", \"last\");\r",
									"pm.environment.set(\"sso_reg_password\", \"12345678aA\");\r",
									"pm.environment.set(\"sso_phone\", \"+12265874521\");\r",
									"pm.environment.set(\"sso_userType\", \"Dealer\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5db41f04-77a2-4cff-b316-493ee21ef294",
								"exec": [
									"var responsebody= JSON.parse(responseBody);",
									"var user_id = responsebody.id;",
									"pm.environment.set(\"user_id\", user_id);",
									"var res_Fname= responsebody.user.first_name;",
									"var req_Fname= pm.environment.get(\"sso_firstName\"); ",
									"var res_Lname= responsebody.user.last_name;",
									"var req_Lname= pm.environment.get(\"sso_lastName\"); ",
									"var reg_date = responsebody.createdAt;",
									"pm.environment.set(\"created_date\",reg_date);",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"//******************************Check Status Code of API************************************//",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"//******************************Check Status message of API************************************//",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"//******************************Check Response Time of API************************************//",
									"pm.test(\"Response time is less than\" +response_time , function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(response_time);",
									"});",
									"//*******************Validate Id is not null********************************************//",
									"",
									"pm.test(\"Check created Id is not equal null\", function () {",
									"    pm.expect(responsebody.id).to.not.eql(null);",
									"});",
									"//*******************Validate Id is not 0******************************************//",
									"pm.test(\"Check created Id is not equal 0\", function () {",
									"    pm.expect(responsebody.id).to.not.eql(0);",
									"});",
									"//*******************Validate firstname match inserted one ******************************************//",
									"pm.test(\"Check first name is correct\", function () {",
									"    pm.expect(res_Fname).to.eql(req_Fname);",
									"});",
									"//*******************Validate lastname match inserted one ******************************************//",
									"pm.test(\"Check Last name is correct\", function () {",
									"    pm.expect(res_Lname).to.eql(req_Lname);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\": {\n\t  \"confirmed_password\": \"{{sso_reg_confirmedPassword}}\",\n\t  \"email\": \"{{reg_email}}\",\n\t  \"first_name\": \"{{sso_firstName}}\",\n\t  \"last_name\": \"{{sso_lastName}}\",\n\t  \"password\": \"{{sso_reg_confirmedPassword}}\",\n\t  \"type\": \"{{sso_userType}}\",\n\t  \"phone\": \"{{sso_phone}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}v1/users/register",
							"host": [
								"{{host}}v1"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Registration - Consumer",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "888d7363-95f1-4855-93d4-e57433aa7c7f",
								"exec": [
									"var sso_username = \"sso-user\" +  Math.floor(Math.random() * 9999999);\r",
									"\r",
									"pm.environment.set(\"sso_reg_confirmedPassword\", \"12345678aA\");\r",
									"pm.environment.set(\"reg_email\",sso_username +\"@mailinator.com\");\r",
									"pm.environment.set(\"sso_firstName\", sso_username);\r",
									"pm.environment.set(\"sso_lastName\", \"last\");\r",
									"pm.environment.set(\"sso_reg_password\", \"12345678aA\");\r",
									"pm.environment.set(\"sso_phone\", \"+12265874521\");\r",
									"pm.environment.set(\"sso_userType\", \"Consumer\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5db41f04-77a2-4cff-b316-493ee21ef294",
								"exec": [
									"var responsebody= JSON.parse(responseBody);",
									"var user_id = responsebody.id;",
									"pm.environment.set(\"user_id\", user_id);",
									"var res_Fname= responsebody.user.first_name;",
									"var req_Fname= pm.environment.get(\"sso_firstName\"); ",
									"var res_Lname= responsebody.user.last_name;",
									"var req_Lname= pm.environment.get(\"sso_lastName\"); ",
									"var reg_date = responsebody.createdAt;",
									"pm.environment.set(\"created_date\",reg_date);",
									"var response_time =parseInt(pm.environment.get(\"response_time\"));",
									"",
									"//******************************Check Status Code of API************************************//",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"//******************************Check Status message of API************************************//",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"//******************************Check Response Time of API************************************//",
									"pm.test(\"Response time is less than\" + response_time , function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(response_time);",
									"});",
									"//*******************Validate Id is not null********************************************//",
									"",
									"pm.test(\"Check created Id is not equal null\", function () {",
									"    pm.expect(responsebody.id).to.not.eql(null);",
									"});",
									"//*******************Validate Id is not 0******************************************//",
									"pm.test(\"Check created Id is not equal 0\", function () {",
									"    pm.expect(responsebody.id).to.not.eql(0);",
									"});",
									"//*******************Validate firstname match inserted one ******************************************//",
									"pm.test(\"Check first name is correct\", function () {",
									"    pm.expect(res_Fname).to.eql(req_Fname);",
									"});",
									"//*******************Validate lastname match inserted one ******************************************//",
									"pm.test(\"Check Last name is correct\", function () {",
									"    pm.expect(res_Lname).to.eql(req_Lname);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\": {\n\t  \"confirmed_password\": \"{{sso_reg_confirmedPassword}}\",\n\t  \"email\": \"{{reg_email}}\",\n\t  \"first_name\": \"{{sso_firstName}}\",\n\t  \"last_name\": \"{{sso_lastName}}\",\n\t  \"password\": \"{{sso_reg_confirmedPassword}}\",\n\t  \"type\": \"{{sso_userType}}\",\n\t  \"phone\": \"{{sso_phone}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{host}}v1/users/register",
							"host": [
								"{{host}}v1"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add car bid + buy now ",
			"item": [
				{
					"name": "SSO login grant-type password - seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO  ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car Multi sale type - bid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"// Set Variables",
									"// Payload Variables",
									"// Values ( 1 - 71 ) -- Note: this related to VIN you provided",
									"pm.environment.set('make_id', 37);",
									"",
									"// Values ( 684 - 731 ) -- Note: this related to VIN you provided",
									"pm.environment.set('model_id', 700);",
									"",
									"// Values ( <= 1950 ) -- Note: this related to VIN you provided",
									"pm.environment.set('year', 2010);",
									"",
									"// Values ( userd | new )",
									"pm.environment.set('condition', 'new');",
									"",
									"pm.environment.set('odometer', 34);",
									"",
									"// Values ( 1 = Manual | 2 = Automatic | 3 = Semi-automatic and dual-clutch )",
									"pm.environment.set('transmission_id', 2);",
									"",
									"// Values ( 1 = 4X4 | 2 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('body_type_id', 1);",
									"",
									"// Values ( 6 = 1200 | 7 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('engine_size_id', 6);",
									"",
									"pm.environment.set('create_car_title', 'This is testing create car from Postman runner');",
									"",
									"pm.environment.set('create_car_description', 'This is testing create car description');",
									"",
									"// Values ( 1 - 12 )",
									"pm.environment.set('number_of_cylinders', 2);",
									"",
									"pm.environment.set('number_of_passengers', 5);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('interior_color_id', 25);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('exterior_color_id', 25);",
									"",
									"// Values ( 28 = FWD | 29 = RWD | 30 = 4WD | 31 = AWD )",
									"pm.environment.set('drive_type_id', 29);",
									"",
									"// Values ( 10 = Interior type 1 | 11 = Interior type 2 )",
									"pm.environment.set('interior_type_id', 11);",
									"",
									"// Values ( 8 = 92 | 9 = 80 )",
									"pm.environment.set('fuel_type_id', 8);",
									"",
									"pm.environment.set('odour', 'Testing Odour here create car');",
									"",
									"pm.environment.set('number_of_keys', 3);",
									"",
									"// Values ( 12 - 20 & 32 ) -- Note: define as json array like: [{ \"number\": 12 }, { \"number\": 14 }]",
									"pm.environment.set('accessory_ids', [{",
									"    \"number\": 12",
									"}, {",
									"    \"number\": 14",
									"}]);",
									"",
									"pm.environment.set('accident_history', 'Testing Accident history for create car');",
									"",
									"// Values ( 21 - 24 ) -- Note: define as json array like: [{ \"number\": 21 }, { \"number\": 24 }]",
									"pm.environment.set('damage_ids', [{",
									"    \"number\": 21",
									"}, {",
									"    \"number\": 24",
									"}]);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('exterior_condition_points', 3);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('interior_condition_points', 4);",
									"",
									"pm.environment.set('exterior_condition_comments', 'This is testing create car exterior condition comments');",
									"",
									"pm.environment.set('interior_condition_comments', 'This is testing create car interior condition comments');",
									"",
									"// Values json objects -- Note: define as json object like below:",
									"// {",
									"//     \"1\": {",
									"//           \"id\": \"\",",
									"//           \"index\": \"\",",
									"//           \"_destroy\": \"\",",
									"//           \"title\": \"\",",
									"//           \"description\": \"\",",
									"//           \"x_coordinate\": \"\",",
									"//           \"y_coordinate\": \"\"",
									"//         }",
									"// }",
									"pm.environment.set('damage_points_attributes', {",
									"    \"1\": {",
									"        \"id\": \"1\",",
									"        \"index\": \"1\",",
									"        \"_destroy\": \"Door Destroy\",",
									"        \"title\": \"Door Destroy\",",
									"        \"description\": \"Destroy in front left door\",",
									"        \"x_coordinate\": \"1497524316448\",",
									"        \"y_coordinate\": \"1497524316448\"",
									"    },",
									"    \"2\": {",
									"        \"id\": \"2\",",
									"        \"index\": \"2\",",
									"        \"_destroy\": \"Glass Destroy\",",
									"        \"title\": \"Glass Destroy\",",
									"        \"description\": \"Destroy in Front Glass\",",
									"        \"x_coordinate\": \"1497524513853\",",
									"        \"y_coordinate\": \"1497524513853\"",
									"    }",
									"});",
									"",
									"// Values ( 24, 48, 72, 200, 0.1, 0.3 )",
									"pm.environment.set('sale_period', '24');",
									"",
									"",
									"// options has some roles",
									"// You can't send Make offer with Bid for car creation, So if you select Make offer then Bid will disabled",
									"// Values as json obeject as below:",
									"// {",
									"//     \"buy_now\": {",
									"//         \"price\": 120",
									"//     },",
									"//     \"make_offer\": {",
									"//         \"reserve_amount\": 120",
									"//     }",
									"// }",
									"pm.environment.set('options', {",
									"    \"buy_now\": {",
									"          \"price\": 120",
									"        },",
									"        \"bid\": {",
									"          \"start_amount\": 1,",
									"          \"reserve_amount\": 2",
									"        }",
									"});",
									"",
									"",
									"",
									"// Values: ( save | save_and_activate | save_as_draft )",
									"pm.environment.set('save_commit', 'save_and_activate');",
									"",
									"pm.environment.set('postal_code', 'K1A 0B1');",
									"",
									"// Values ( FWD | RWD | 4WD | AWD )",
									"pm.environment.set('drive_type', '4WD');",
									"",
									"",
									"// Test Variables",
									"pm.environment.set('response_time', 5000);",
									"",
									"pm.environment.set('response_time_msg', \"Response Time is less than\" + pm.environment.get('response_time') + \"seconds\");",
									"",
									"pm.environment.set('status_code', 201);",
									"",
									"pm.environment.set(\"status_code_msg\", \"Response Status Code \" + pm.environment.get(\"status_code\"));",
									"",
									"pm.environment.set(\"schema_response_msg\", \"Server Returns Reposne Body\");",
									"",
									"pm.environment.set(\"schema_msg\", \"Reposne Body schema is correct\");",
									"",
									"pm.environment.set(\"schema_form\", {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"/properties/checked\",",
									"      \"type\": \"boolean\",",
									"      \"title\": \"The Checked Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": false,",
									"      \"examples\": [",
									"        false",
									"      ]",
									"    },",
									"    \"dimensions\": {",
									"      \"$id\": \"/properties/dimensions\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"/properties/dimensions/properties/width\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Width Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            5",
									"          ]",
									"        },",
									"        \"height\": {",
									"          \"$id\": \"/properties/dimensions/properties/height\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Height Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            10",
									"          ]",
									"        }",
									"      }",
									"    },",
									"    \"id\": {",
									"      \"$id\": \"/properties/id\",",
									"      \"type\": \"integer\",",
									"      \"title\": \"The Id Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        1",
									"      ]",
									"    },",
									"    \"name\": {",
									"      \"$id\": \"/properties/name\",",
									"      \"type\": \"string\",",
									"      \"title\": \"The Name Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": \"\",",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ]",
									"    },",
									"    \"price\": {",
									"      \"$id\": \"/properties/price\",",
									"      \"type\": \"number\",",
									"      \"title\": \"The Price Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        12.5",
									"      ]",
									"    },",
									"    \"tags\": {",
									"      \"$id\": \"/properties/tags\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"/properties/tags/items\",",
									"        \"type\": \"string\",",
									"        \"title\": \"The 0 Schema\",",
									"        \"description\": \"An explanation about the purpose of this instance.\",",
									"        \"default\": \"\",",
									"        \"examples\": [",
									"          \"home\"",
									"        ]",
									"      }",
									"    }",
									"  }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that car is a bid car\", function () {",
									"    pm.expect(response.car.bid).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that car is a buy now car\", function () {",
									"    pm.expect(response.car.buy_now).to.eql(true);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n  \"car\": {\n    \"condition\": \"new\",\n    \"save_commit\": \"save_as_draft\",\n    \"sale_period\": \"30\",\n    \"vin\": \"YV1TS90D3Y1113682\",\n    \"odometer\": 1400,\n    \"odometer_reading_unit_id\": 188,\n    \"number_of_keys_id\": 171,\n    \"odour_id\": 173,\n    \"make_id\": 11,\n    \"model_id\": 260,\n    \"year\": 2017,\n    \"trim_id\": 153,\n    \"fuel_type_id\": 195,\n    \"body_type_id\": 166,\n    \"transmission_id\": 176,\n    \"engine_size_id\": 64,\n    \"drive_type_id\": 184,\n    \"interior_color_id\": 1,\n    \"exterior_color_id\": 4,\n    \"number_of_cylinders\": 6,\n    \"number_of_passengers_id\": 148,\n    \"options\": {\n      \"buy_now\": {\n        \"reserve_amount\": 6000,\n        \"start_amount\": 3000,\n        \"increment\": 100,\n        \"price\": 3000\n      },\n      \"bid\": {\n        \"reserve_amount\": 6000,\n        \"start_amount\": 3000,\n        \"increment\": 100,\n        \"price\": 3000\n      }\n    }\n  }\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add car Make offer + buy now ",
			"item": [
				{
					"name": "SSO login grant-type password - seller ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO  ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car Multi sale type - make_offer ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"// Set Variables",
									"// Payload Variables",
									"// Values ( 1 - 71 ) -- Note: this related to VIN you provided",
									"pm.environment.set('make_id', 37);",
									"",
									"// Values ( 684 - 731 ) -- Note: this related to VIN you provided",
									"pm.environment.set('model_id', 700);",
									"",
									"// Values ( <= 1950 ) -- Note: this related to VIN you provided",
									"pm.environment.set('year', 2010);",
									"",
									"// Values ( userd | new )",
									"pm.environment.set('condition', 'new');",
									"",
									"pm.environment.set('odometer', 34);",
									"",
									"// Values ( 1 = Manual | 2 = Automatic | 3 = Semi-automatic and dual-clutch )",
									"pm.environment.set('transmission_id', 2);",
									"",
									"// Values ( 1 = 4X4 | 2 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('body_type_id', 1);",
									"",
									"// Values ( 6 = 1200 | 7 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('engine_size_id', 6);",
									"",
									"pm.environment.set('create_car_title', 'This is testing create car from Postman runner');",
									"",
									"pm.environment.set('create_car_description', 'This is testing create car description');",
									"",
									"// Values ( 1 - 12 )",
									"pm.environment.set('number_of_cylinders', 2);",
									"",
									"pm.environment.set('number_of_passengers', 5);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('interior_color_id', 25);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('exterior_color_id', 25);",
									"",
									"// Values ( 28 = FWD | 29 = RWD | 30 = 4WD | 31 = AWD )",
									"pm.environment.set('drive_type_id', 29);",
									"",
									"// Values ( 10 = Interior type 1 | 11 = Interior type 2 )",
									"pm.environment.set('interior_type_id', 11);",
									"",
									"// Values ( 8 = 92 | 9 = 80 )",
									"pm.environment.set('fuel_type_id', 8);",
									"",
									"pm.environment.set('odour', 'Testing Odour here create car');",
									"",
									"pm.environment.set('number_of_keys', 3);",
									"",
									"// Values ( 12 - 20 & 32 ) -- Note: define as json array like: [{ \"number\": 12 }, { \"number\": 14 }]",
									"pm.environment.set('accessory_ids', [{",
									"    \"number\": 12",
									"}, {",
									"    \"number\": 14",
									"}]);",
									"",
									"pm.environment.set('accident_history', 'Testing Accident history for create car');",
									"",
									"// Values ( 21 - 24 ) -- Note: define as json array like: [{ \"number\": 21 }, { \"number\": 24 }]",
									"pm.environment.set('damage_ids', [{",
									"    \"number\": 21",
									"}, {",
									"    \"number\": 24",
									"}]);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('exterior_condition_points', 3);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('interior_condition_points', 4);",
									"",
									"pm.environment.set('exterior_condition_comments', 'This is testing create car exterior condition comments');",
									"",
									"pm.environment.set('interior_condition_comments', 'This is testing create car interior condition comments');",
									"",
									"// Values json objects -- Note: define as json object like below:",
									"// {",
									"//     \"1\": {",
									"//           \"id\": \"\",",
									"//           \"index\": \"\",",
									"//           \"_destroy\": \"\",",
									"//           \"title\": \"\",",
									"//           \"description\": \"\",",
									"//           \"x_coordinate\": \"\",",
									"//           \"y_coordinate\": \"\"",
									"//         }",
									"// }",
									"pm.environment.set('damage_points_attributes', {",
									"    \"1\": {",
									"        \"id\": \"1\",",
									"        \"index\": \"1\",",
									"        \"_destroy\": \"Door Destroy\",",
									"        \"title\": \"Door Destroy\",",
									"        \"description\": \"Destroy in front left door\",",
									"        \"x_coordinate\": \"1497524316448\",",
									"        \"y_coordinate\": \"1497524316448\"",
									"    },",
									"    \"2\": {",
									"        \"id\": \"2\",",
									"        \"index\": \"2\",",
									"        \"_destroy\": \"Glass Destroy\",",
									"        \"title\": \"Glass Destroy\",",
									"        \"description\": \"Destroy in Front Glass\",",
									"        \"x_coordinate\": \"1497524513853\",",
									"        \"y_coordinate\": \"1497524513853\"",
									"    }",
									"});",
									"",
									"// Values ( 24, 48, 72, 200, 0.1, 0.3 )",
									"pm.environment.set('sale_period', '24');",
									"",
									"",
									"// options has some roles",
									"// You can't send Make offer with Bid for car creation, So if you select Make offer then Bid will disabled",
									"// Values as json obeject as below:",
									"// {",
									"//     \"buy_now\": {",
									"//         \"price\": 120",
									"//     },",
									"//     \"make_offer\": {",
									"//         \"reserve_amount\": 120",
									"//     }",
									"// }",
									"pm.environment.set('options', {",
									"    \"buy_now\": {",
									"          \"price\": 120",
									"        },",
									"        \"bid\": {",
									"          \"start_amount\": 1,",
									"          \"reserve_amount\": 2",
									"        }",
									"});",
									"",
									"",
									"",
									"// Values: ( save | save_and_activate | save_as_draft )",
									"pm.environment.set('save_commit', 'save_and_activate');",
									"",
									"pm.environment.set('postal_code', 'K1A 0B1');",
									"",
									"// Values ( FWD | RWD | 4WD | AWD )",
									"pm.environment.set('drive_type', '4WD');",
									"",
									"",
									"// Test Variables",
									"pm.environment.set('response_time', 5000);",
									"",
									"pm.environment.set('response_time_msg', \"Response Time is less than\" + pm.environment.get('response_time') + \"seconds\");",
									"",
									"pm.environment.set('status_code', 201);",
									"",
									"pm.environment.set(\"status_code_msg\", \"Response Status Code \" + pm.environment.get(\"status_code\"));",
									"",
									"pm.environment.set(\"schema_response_msg\", \"Server Returns Reposne Body\");",
									"",
									"pm.environment.set(\"schema_msg\", \"Reposne Body schema is correct\");",
									"",
									"pm.environment.set(\"schema_form\", {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"/properties/checked\",",
									"      \"type\": \"boolean\",",
									"      \"title\": \"The Checked Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": false,",
									"      \"examples\": [",
									"        false",
									"      ]",
									"    },",
									"    \"dimensions\": {",
									"      \"$id\": \"/properties/dimensions\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"/properties/dimensions/properties/width\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Width Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            5",
									"          ]",
									"        },",
									"        \"height\": {",
									"          \"$id\": \"/properties/dimensions/properties/height\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Height Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            10",
									"          ]",
									"        }",
									"      }",
									"    },",
									"    \"id\": {",
									"      \"$id\": \"/properties/id\",",
									"      \"type\": \"integer\",",
									"      \"title\": \"The Id Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        1",
									"      ]",
									"    },",
									"    \"name\": {",
									"      \"$id\": \"/properties/name\",",
									"      \"type\": \"string\",",
									"      \"title\": \"The Name Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": \"\",",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ]",
									"    },",
									"    \"price\": {",
									"      \"$id\": \"/properties/price\",",
									"      \"type\": \"number\",",
									"      \"title\": \"The Price Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        12.5",
									"      ]",
									"    },",
									"    \"tags\": {",
									"      \"$id\": \"/properties/tags\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"/properties/tags/items\",",
									"        \"type\": \"string\",",
									"        \"title\": \"The 0 Schema\",",
									"        \"description\": \"An explanation about the purpose of this instance.\",",
									"        \"default\": \"\",",
									"        \"examples\": [",
									"          \"home\"",
									"        ]",
									"      }",
									"    }",
									"  }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"pm.test(\"Verify that the added car is a buy now car\", function () {",
									"    pm.expect(response.car.buy_now).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that the added car is a make offer car\", function () {",
									"    pm.expect(response.car.make_offer).to.eql(true);",
									"});",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n  \"car\": {\n    \"condition\": \"new\",\n    \"save_commit\": \"save_as_draft\",\n    \"sale_period\": \"30\",\n    \"vin\": \"YV1TS90D3Y1113682\",\n    \"odometer\": 1400,\n    \"odometer_reading_unit_id\": 188,\n    \"number_of_keys_id\": 171,\n    \"odour_id\": 173,\n    \"make_id\": 11,\n    \"model_id\": 260,\n    \"year\": 2017,\n    \"trim_id\": 153,\n    \"fuel_type_id\": 195,\n    \"body_type_id\": 166,\n    \"transmission_id\": 176,\n    \"engine_size_id\": 64,\n    \"drive_type_id\": 184,\n    \"interior_color_id\": 1,\n    \"exterior_color_id\": 4,\n    \"number_of_cylinders\": 6,\n    \"number_of_passengers_id\": 148,\n    \"options\": {\n      \"buy_now\": {\n        \"reserve_amount\": 6000,\n        \"start_amount\": 3000,\n        \"increment\": 100,\n        \"price\": 3000\n      },\n      \"make_offer\": {\n        \"reserve_amount\": 6000,\n        \"start_amount\": 3000,\n        \"increment\": 100,\n        \"price\": 3000\n      }\n    }\n  }\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Edit car ",
			"item": [
				{
					"name": "SSO login grant-type password - seller ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile SSO   ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cdde29e-af8f-41fa-9922-91ce4669ce65",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"",
									"//Set variables take delearship id ",
									"pm.globals.set(\"DealershipId\", response.user.dealerships[0].id);",
									"    ",
									"  ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/v5/users/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"v5",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Car Multi sale type - make_offer  Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b3b26583-88f9-4eb9-bc66-ad9aa4d1b87e",
								"exec": [
									"// Set Variables",
									"// Payload Variables",
									"// Values ( 1 - 71 ) -- Note: this related to VIN you provided",
									"pm.environment.set('make_id', 37);",
									"",
									"// Values ( 684 - 731 ) -- Note: this related to VIN you provided",
									"pm.environment.set('model_id', 700);",
									"",
									"// Values ( <= 1950 ) -- Note: this related to VIN you provided",
									"pm.environment.set('year', 2010);",
									"",
									"// Values ( userd | new )",
									"pm.environment.set('condition', 'new');",
									"",
									"pm.environment.set('odometer', 34);",
									"",
									"// Values ( 1 = Manual | 2 = Automatic | 3 = Semi-automatic and dual-clutch )",
									"pm.environment.set('transmission_id', 2);",
									"",
									"// Values ( 1 = 4X4 | 2 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('body_type_id', 1);",
									"",
									"// Values ( 6 = 1200 | 7 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('engine_size_id', 6);",
									"",
									"pm.environment.set('create_car_title', 'This is testing create car from Postman runner');",
									"",
									"pm.environment.set('create_car_description', 'This is testing create car description');",
									"",
									"// Values ( 1 - 12 )",
									"pm.environment.set('number_of_cylinders', 2);",
									"",
									"pm.environment.set('number_of_passengers', 5);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('interior_color_id', 25);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('exterior_color_id', 25);",
									"",
									"// Values ( 28 = FWD | 29 = RWD | 30 = 4WD | 31 = AWD )",
									"pm.environment.set('drive_type_id', 29);",
									"",
									"// Values ( 10 = Interior type 1 | 11 = Interior type 2 )",
									"pm.environment.set('interior_type_id', 11);",
									"",
									"// Values ( 8 = 92 | 9 = 80 )",
									"pm.environment.set('fuel_type_id', 8);",
									"",
									"pm.environment.set('odour', 'Testing Odour here create car');",
									"",
									"pm.environment.set('number_of_keys', 3);",
									"",
									"// Values ( 12 - 20 & 32 ) -- Note: define as json array like: [{ \"number\": 12 }, { \"number\": 14 }]",
									"pm.environment.set('accessory_ids', [{",
									"    \"number\": 12",
									"}, {",
									"    \"number\": 14",
									"}]);",
									"",
									"pm.environment.set('accident_history', 'Testing Accident history for create car');",
									"",
									"// Values ( 21 - 24 ) -- Note: define as json array like: [{ \"number\": 21 }, { \"number\": 24 }]",
									"pm.environment.set('damage_ids', [{",
									"    \"number\": 21",
									"}, {",
									"    \"number\": 24",
									"}]);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('exterior_condition_points', 3);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('interior_condition_points', 4);",
									"",
									"pm.environment.set('exterior_condition_comments', 'This is testing create car exterior condition comments');",
									"",
									"pm.environment.set('interior_condition_comments', 'This is testing create car interior condition comments');",
									"",
									"// Values json objects -- Note: define as json object like below:",
									"// {",
									"//     \"1\": {",
									"//           \"id\": \"\",",
									"//           \"index\": \"\",",
									"//           \"_destroy\": \"\",",
									"//           \"title\": \"\",",
									"//           \"description\": \"\",",
									"//           \"x_coordinate\": \"\",",
									"//           \"y_coordinate\": \"\"",
									"//         }",
									"// }",
									"pm.environment.set('damage_points_attributes', {",
									"    \"1\": {",
									"        \"id\": \"1\",",
									"        \"index\": \"1\",",
									"        \"_destroy\": \"Door Destroy\",",
									"        \"title\": \"Door Destroy\",",
									"        \"description\": \"Destroy in front left door\",",
									"        \"x_coordinate\": \"1497524316448\",",
									"        \"y_coordinate\": \"1497524316448\"",
									"    },",
									"    \"2\": {",
									"        \"id\": \"2\",",
									"        \"index\": \"2\",",
									"        \"_destroy\": \"Glass Destroy\",",
									"        \"title\": \"Glass Destroy\",",
									"        \"description\": \"Destroy in Front Glass\",",
									"        \"x_coordinate\": \"1497524513853\",",
									"        \"y_coordinate\": \"1497524513853\"",
									"    }",
									"});",
									"",
									"// Values ( 24, 48, 72, 200, 0.1, 0.3 )",
									"pm.environment.set('sale_period', '24');",
									"",
									"",
									"// options has some roles",
									"// You can't send Make offer with Bid for car creation, So if you select Make offer then Bid will disabled",
									"// Values as json obeject as below:",
									"// {",
									"//     \"buy_now\": {",
									"//         \"price\": 120",
									"//     },",
									"//     \"make_offer\": {",
									"//         \"reserve_amount\": 120",
									"//     }",
									"// }",
									"pm.environment.set('options', {",
									"    \"buy_now\": {",
									"          \"price\": 120",
									"        },",
									"        \"bid\": {",
									"          \"start_amount\": 1,",
									"          \"reserve_amount\": 2",
									"        }",
									"});",
									"",
									"",
									"",
									"// Values: ( save | save_and_activate | save_as_draft )",
									"pm.environment.set('save_commit', 'save_and_activate');",
									"",
									"pm.environment.set('postal_code', 'K1A 0B1');",
									"",
									"// Values ( FWD | RWD | 4WD | AWD )",
									"pm.environment.set('drive_type', '4WD');",
									"",
									"",
									"// Test Variables",
									"pm.environment.set('response_time', 5000);",
									"",
									"pm.environment.set('response_time_msg', \"Response Time is less than\" + pm.environment.get('response_time') + \"seconds\");",
									"",
									"pm.environment.set('status_code', 201);",
									"",
									"pm.environment.set(\"status_code_msg\", \"Response Status Code \" + pm.environment.get(\"status_code\"));",
									"",
									"pm.environment.set(\"schema_response_msg\", \"Server Returns Reposne Body\");",
									"",
									"pm.environment.set(\"schema_msg\", \"Reposne Body schema is correct\");",
									"",
									"pm.environment.set(\"schema_form\", {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"/properties/checked\",",
									"      \"type\": \"boolean\",",
									"      \"title\": \"The Checked Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": false,",
									"      \"examples\": [",
									"        false",
									"      ]",
									"    },",
									"    \"dimensions\": {",
									"      \"$id\": \"/properties/dimensions\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"/properties/dimensions/properties/width\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Width Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            5",
									"          ]",
									"        },",
									"        \"height\": {",
									"          \"$id\": \"/properties/dimensions/properties/height\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Height Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            10",
									"          ]",
									"        }",
									"      }",
									"    },",
									"    \"id\": {",
									"      \"$id\": \"/properties/id\",",
									"      \"type\": \"integer\",",
									"      \"title\": \"The Id Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        1",
									"      ]",
									"    },",
									"    \"name\": {",
									"      \"$id\": \"/properties/name\",",
									"      \"type\": \"string\",",
									"      \"title\": \"The Name Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": \"\",",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ]",
									"    },",
									"    \"price\": {",
									"      \"$id\": \"/properties/price\",",
									"      \"type\": \"number\",",
									"      \"title\": \"The Price Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        12.5",
									"      ]",
									"    },",
									"    \"tags\": {",
									"      \"$id\": \"/properties/tags\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"/properties/tags/items\",",
									"        \"type\": \"string\",",
									"        \"title\": \"The 0 Schema\",",
									"        \"description\": \"An explanation about the purpose of this instance.\",",
									"        \"default\": \"\",",
									"        \"examples\": [",
									"          \"home\"",
									"        ]",
									"      }",
									"    }",
									"  }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01762f84-84ca-4483-9ff9-983a315211f5",
								"exec": [
									"var response = pm.response.json();",
									"",
									"eval(pm.environment.get(\"Common201Tests\"))();",
									"",
									"",
									"pm.test(\"Verify that the added car is a buy now car\", function () {",
									"    pm.expect(response.car.buy_now).to.eql(true);",
									"});",
									"",
									"pm.test(\"Verify that the added car is a make offer car\", function () {",
									"    pm.expect(response.car.make_offer).to.eql(true);",
									"});",
									"// Save Car ID ",
									"pm.globals.set(\"CarId\", response.car.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							},
							{
								"key": "Authorization",
								"value": "{{AuthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n  \"car\": {\n    \"condition\": \"new\",\n    \"save_commit\": \"save_as_draft\",\n    \"sale_period\": \"30\",\n    \"vin\": \"YV1TS90D3Y1113682\",\n    \"odometer\": 1400,\n    \"odometer_reading_unit_id\": 188,\n    \"number_of_keys_id\": 171,\n    \"odour_id\": 173,\n    \"make_id\": 11,\n    \"model_id\": 260,\n    \"year\": 2017,\n    \"trim_id\": 153,\n    \"fuel_type_id\": 195,\n    \"body_type_id\": 166,\n    \"transmission_id\": 176,\n    \"engine_size_id\": 64,\n    \"drive_type_id\": 184,\n    \"interior_color_id\": 1,\n    \"exterior_color_id\": 4,\n    \"number_of_cylinders\": 6,\n    \"number_of_passengers_id\": 148,\n    \"options\": {\n      \"buy_now\": {\n        \"reserve_amount\": 6000,\n        \"start_amount\": 3000,\n        \"increment\": 100,\n        \"price\": 3000\n      },\n      \"make_offer\": {\n        \"reserve_amount\": 6000,\n        \"start_amount\": 3000,\n        \"increment\": 100,\n        \"price\": 3000\n      }\n    }\n  }\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Car Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ad051d6-dba0-4053-8ee4-3105705fb7eb",
								"exec": [
									"",
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6f2f23ed-5293-4f6f-b5c1-cf52a92cfae1",
								"exec": [
									"// Set Variables",
									"// Payload Variables",
									"// Values ( 1 - 71 ) -- Note: this related to VIN you provided",
									"pm.environment.set('make_id', 37);",
									"",
									"// Values ( 684 - 731 ) -- Note: this related to VIN you provided",
									"pm.environment.set('model_id', 700);",
									"",
									"// Values ( <= 1950 ) -- Note: this related to VIN you provided",
									"pm.environment.set('year', 2010);",
									"",
									"// Values ( userd | new )",
									"pm.environment.set('condition', 'new');",
									"",
									"pm.environment.set('odometer', 34);",
									"",
									"// Values ( 1 = Manual | 2 = Automatic | 3 = Semi-automatic and dual-clutch )",
									"pm.environment.set('transmission_id', 2);",
									"",
									"// Values ( 1 = 4X4 | 2 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('body_type_id', 1);",
									"",
									"// Values ( 6 = 1200 | 7 = Sport ) -- Note: this related to car type and conditions",
									"pm.environment.set('engine_size_id', 6);",
									"",
									"pm.environment.set('create_car_title', 'This is testing create car from Postman runner');",
									"",
									"pm.environment.set('create_car_description', 'This is testing create car description');",
									"",
									"// Values ( 1 - 12 )",
									"pm.environment.set('number_of_cylinders', 2);",
									"",
									"pm.environment.set('number_of_passengers', 5);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('interior_color_id', 25);",
									"",
									"// Values ( 25 = Red | 26 = Green | 27 = Black )",
									"pm.environment.set('exterior_color_id', 25);",
									"",
									"// Values ( 28 = FWD | 29 = RWD | 30 = 4WD | 31 = AWD )",
									"pm.environment.set('drive_type_id', 29);",
									"",
									"// Values ( 10 = Interior type 1 | 11 = Interior type 2 )",
									"pm.environment.set('interior_type_id', 11);",
									"",
									"// Values ( 8 = 92 | 9 = 80 )",
									"pm.environment.set('fuel_type_id', 8);",
									"",
									"pm.environment.set('odour', 'Testing Odour here create car');",
									"",
									"pm.environment.set('number_of_keys', 3);",
									"",
									"// Values ( 12 - 20 & 32 ) -- Note: define as json array like: [{ \"number\": 12 }, { \"number\": 14 }]",
									"pm.environment.set('accessory_ids', [{",
									"    \"number\": 12",
									"}, {",
									"    \"number\": 14",
									"}]);",
									"",
									"pm.environment.set('accident_history', 'Testing Accident history for create car');",
									"",
									"// Values ( 21 - 24 ) -- Note: define as json array like: [{ \"number\": 21 }, { \"number\": 24 }]",
									"pm.environment.set('damage_ids', [{",
									"    \"number\": 21",
									"}, {",
									"    \"number\": 24",
									"}]);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('exterior_condition_points', 3);",
									"",
									"// Values ( 1 - 5 )",
									"pm.environment.set('interior_condition_points', 4);",
									"",
									"pm.environment.set('exterior_condition_comments', 'This is testing create car exterior condition comments');",
									"",
									"pm.environment.set('interior_condition_comments', 'This is testing create car interior condition comments');",
									"",
									"// Values json objects -- Note: define as json object like below:",
									"// {",
									"//     \"1\": {",
									"//           \"id\": \"\",",
									"//           \"index\": \"\",",
									"//           \"_destroy\": \"\",",
									"//           \"title\": \"\",",
									"//           \"description\": \"\",",
									"//           \"x_coordinate\": \"\",",
									"//           \"y_coordinate\": \"\"",
									"//         }",
									"// }",
									"pm.environment.set('damage_points_attributes', {",
									"    \"1\": {",
									"        \"id\": \"1\",",
									"        \"index\": \"1\",",
									"        \"_destroy\": \"Door Destroy\",",
									"        \"title\": \"Door Destroy\",",
									"        \"description\": \"Destroy in front left door\",",
									"        \"x_coordinate\": \"1497524316448\",",
									"        \"y_coordinate\": \"1497524316448\"",
									"    },",
									"    \"2\": {",
									"        \"id\": \"2\",",
									"        \"index\": \"2\",",
									"        \"_destroy\": \"Glass Destroy\",",
									"        \"title\": \"Glass Destroy\",",
									"        \"description\": \"Destroy in Front Glass\",",
									"        \"x_coordinate\": \"1497524513853\",",
									"        \"y_coordinate\": \"1497524513853\"",
									"    }",
									"});",
									"",
									"// Values ( 24, 48, 72, 200, 0.1, 0.3 )",
									"pm.environment.set('sale_period', '24');",
									"",
									"",
									"// options has some roles",
									"// You can't send Make offer with Bid for car creation, So if you select Make offer then Bid will disabled",
									"// Values as json obeject as below:",
									"// {",
									"//     \"buy_now\": {",
									"//         \"price\": 120",
									"//     },",
									"//     \"make_offer\": {",
									"//         \"reserve_amount\": 120",
									"//     }",
									"// }",
									"pm.environment.set('options', {",
									"    \"buy_now\": {",
									"          \"price\": 120",
									"        },",
									"        \"bid\": {",
									"          \"start_amount\": 1,",
									"          \"reserve_amount\": 2",
									"        }",
									"});",
									"",
									"",
									"",
									"// Values: ( save | save_and_activate | save_as_draft )",
									"pm.environment.set('save_commit', 'save_and_activate');",
									"",
									"pm.environment.set('postal_code', 'K1A 0B1');",
									"",
									"// Values ( FWD | RWD | 4WD | AWD )",
									"pm.environment.set('drive_type', '4WD');",
									"",
									"",
									"// Test Variables",
									"pm.environment.set('response_time', 5000);",
									"",
									"pm.environment.set('response_time_msg', \"Response Time is less than\" + pm.environment.get('response_time') + \"seconds\");",
									"",
									"pm.environment.set('status_code', 201);",
									"",
									"pm.environment.set(\"status_code_msg\", \"Response Status Code \" + pm.environment.get(\"status_code\"));",
									"",
									"pm.environment.set(\"schema_response_msg\", \"Server Returns Reposne Body\");",
									"",
									"pm.environment.set(\"schema_msg\", \"Reposne Body schema is correct\");",
									"",
									"pm.environment.set(\"schema_form\", {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"/properties/checked\",",
									"      \"type\": \"boolean\",",
									"      \"title\": \"The Checked Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": false,",
									"      \"examples\": [",
									"        false",
									"      ]",
									"    },",
									"    \"dimensions\": {",
									"      \"$id\": \"/properties/dimensions\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"/properties/dimensions/properties/width\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Width Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            5",
									"          ]",
									"        },",
									"        \"height\": {",
									"          \"$id\": \"/properties/dimensions/properties/height\",",
									"          \"type\": \"integer\",",
									"          \"title\": \"The Height Schema\",",
									"          \"description\": \"An explanation about the purpose of this instance.\",",
									"          \"default\": 0,",
									"          \"examples\": [",
									"            10",
									"          ]",
									"        }",
									"      }",
									"    },",
									"    \"id\": {",
									"      \"$id\": \"/properties/id\",",
									"      \"type\": \"integer\",",
									"      \"title\": \"The Id Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        1",
									"      ]",
									"    },",
									"    \"name\": {",
									"      \"$id\": \"/properties/name\",",
									"      \"type\": \"string\",",
									"      \"title\": \"The Name Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": \"\",",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ]",
									"    },",
									"    \"price\": {",
									"      \"$id\": \"/properties/price\",",
									"      \"type\": \"number\",",
									"      \"title\": \"The Price Schema\",",
									"      \"description\": \"An explanation about the purpose of this instance.\",",
									"      \"default\": 0,",
									"      \"examples\": [",
									"        12.5",
									"      ]",
									"    },",
									"    \"tags\": {",
									"      \"$id\": \"/properties/tags\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"/properties/tags/items\",",
									"        \"type\": \"string\",",
									"        \"title\": \"The 0 Schema\",",
									"        \"description\": \"An explanation about the purpose of this instance.\",",
									"        \"default\": \"\",",
									"        \"examples\": [",
									"          \"home\"",
									"        ]",
									"      }",
									"    }",
									"  }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "{{AuthToken}}"
							},
							{
								"key": "current-dealership-id",
								"value": "{{DealershipId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "car_json_data",
									"value": "{\n\"car\":{\n\"save_commit\":\"save\",\n\"options\":{\"bid\":{\"reserve_amount\":6000,\"start_amount\":3000,\"increment\":100, \"price\":3000}}\n}\n}",
									"description": "required",
									"type": "text"
								},
								{
									"key": "car[photos_attributes][1][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][2][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][3][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][4][attachment]",
									"description": "required",
									"type": "file",
									"src": "/home/winfooz/Downloads/1.jpg"
								},
								{
									"key": "car[photos_attributes][1][main]",
									"value": "1",
									"description": "required",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/v1/owned_cars/{{CarId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"owned_cars",
								"{{CarId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add dealership ",
			"item": [
				{
					"name": "SSO login grant-type password - seller ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fd5ed71-9e43-4893-a2d5-095900bec863",
								"exec": [
									"var email = pm.globals.get(\"SellerEmail\");",
									"// set password ",
									"pm.environment.set(\"password\", \"12345678a\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9698007c-f6cc-44e9-97d7-c3631ca24a28",
								"exec": [
									"eval(pm.environment.get(\"Common200OkTests\"))();",
									"",
									"var response = pm.response.json();",
									"  //Set variables",
									"pm.globals.set(\"AuthToken\", \"Bearer \" + response.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"password\",\n\t\"email\": \"{{SellerEmail}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/v1/oauth/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Dealership Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e6a4e9a0-3fb5-431a-9650-5d5131bab14c",
								"exec": [
									"",
									"var DealershipRandName = \"DealershipName\" +  Math.floor(Math.random() * 9999999);",
									"pm.globals.set(\"DealershipName\",DealershipRandName );",
									"",
									"var DealershipRandNum =   Math.floor(Math.random() * 99999
